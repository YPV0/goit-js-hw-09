{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SACpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFX,EAAAe,OAAOC,QAAQ,uBAAqBV,QAAiBC,OACnDE,EAAM,C,SAAEH,E,MAAUC,MAEpBP,EAAAe,OAAOE,QAAQ,sBAAoBX,QAAeC,OAClDG,EAAO,C,SAAEJ,E,MAAUC,I,GAEpBA,EAAM,G,CAgBbL,EAAKgB,iBAAiB,UAZtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMb,EAAQc,OAAOnB,EAAKoB,SAASf,MAAMgB,OACnCC,EAAOH,OAAOnB,EAAKoB,SAASE,KAAKD,OACjCE,EAASJ,OAAOnB,EAAKoB,SAASG,OAAOF,OAE3C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BrB,EAAcqB,EAAI,EAAGnB,EAAQmB,EAAIF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nconst form = document.querySelector('.form');\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        resolve({ position, delay });\n      } else {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);\n  const amount = Number(form.elements.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + i * step);\n  }\n}\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","success","failure","addEventListener","event","preventDefault","Number","elements","value","step","amount","i"],"version":3,"file":"03-promises.1bfcf4e0.js.map"}